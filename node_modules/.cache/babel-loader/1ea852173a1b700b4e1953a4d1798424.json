{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/components/context/auth/State.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport Reducer from \"./CartReducer\";\nimport Context from \"./CartContext\";\nimport { REGISTER, LOGIN, LOGOUT, SET_LOGIN } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    user: [{\n      username: 'admin',\n      password: 'password',\n      name: 'Administrator'\n    }],\n    login: false\n  };\n  const [state, dispatch] = useReducer(Reducer, initialState); // set local storage to logged in user\n\n  if (window.localStorage.getItem('user')) {\n    initialState.login = true;\n  } //actions\n  //Register user\n\n\n  const register = user => {\n    dispatch({\n      type: (REGISTER, SET_LOGIN),\n      payload: user\n    });\n  }; //log user in\n\n\n  const login = user => {\n    dispatch({\n      type: LOGIN,\n      payload: user\n    });\n  }; //log user out\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      login,\n      register,\n      logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/context/auth/State.js"],"names":["useReducer","Reducer","Context","REGISTER","LOGIN","LOGOUT","SET_LOGIN","AuthState","props","initialState","user","username","password","name","login","state","dispatch","window","localStorage","getItem","register","type","payload","logout","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,SACEC,QADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,SAJF,QAKO,UALP;;;AAOA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,CACJ;AACEC,MAAAA,QAAQ,EAAE,OADZ;AAEEC,MAAAA,QAAQ,EAAE,UAFZ;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADI,CADa;AAQnBC,IAAAA,KAAK,EAAE;AARY,GAArB;AAWA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACC,OAAD,EAAUQ,YAAV,CAApC,CAZ2B,CAc3B;;AACA,MAAIQ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAJ,EAAwC;AACtCV,IAAAA,YAAY,CAACK,KAAb,GAAqB,IAArB;AACD,GAjB0B,CAmB3B;AACA;;;AACA,QAAMM,QAAQ,GAAIV,IAAD,IAAU;AACzBM,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,GAAGlB,QAAQ,EAAEG,SAAb,CADG;AAEPgB,MAAAA,OAAO,EAAEZ;AAFF,KAAD,CAAR;AAID,GALD,CArB2B,CA4B3B;;;AACA,QAAMI,KAAK,GAAIJ,IAAD,IAAU;AACtBM,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEjB,KADC;AAEPkB,MAAAA,OAAO,EAAEZ;AAFF,KAAD,CAAR;AAID,GALD,CA7B2B,CAsC3B;;;AACA,QAAMa,MAAM,GAAG,MAAM;AACnBP,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEhB;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,IAAI,EAAEK,KAAK,CAACL,IADP;AAELI,MAAAA,KAFK;AAGLM,MAAAA,QAHK;AAILG,MAAAA;AAJK,KADT;AAAA,cAQGf,KAAK,CAACgB;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAzDD;;GAAMjB,S;;KAAAA,S;AA2DN,eAAeA,SAAf","sourcesContent":["import { useReducer } from \"react\";\nimport Reducer from \"./CartReducer\";\nimport Context from \"./CartContext\";\n\nimport {\n  REGISTER,\n  LOGIN,\n  LOGOUT,\n  SET_LOGIN\n} from \"../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    user: [\n      {\n        username: 'admin',\n        password: 'password',\n        name: 'Administrator'\n      }\n    ],\n    login: false,\n  };\n\n  const [state, dispatch] = useReducer(Reducer, initialState);\n\n  // set local storage to logged in user\n  if (window.localStorage.getItem('user')){\n    initialState.login = true \n  }\n  \n  //actions\n  //Register user\n  const register = (user) => {\n    dispatch({\n      type: (REGISTER, SET_LOGIN),\n      payload: user,\n    });\n  };\n\n  //log user in\n  const login = (user) => {\n    dispatch({\n      type: LOGIN,\n      payload: user,\n    });\n  };\n\n  \n\n  //log user out\n  const logout = () => {\n    dispatch({\n      type: LOGOUT,\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        login,\n        register,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}