{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/components/context/cart/CartState.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartReducer from \"./CartReducer\";\nimport CartContext from \"./CartContext\";\nimport { ADD_TO_CART, REMOVE_FROM_CART, INCREASE_CART_ITEM_QTY, DECREASE_CART_ITEM_QTY, CLEAR_CART } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartState = props => {\n  _s();\n\n  const initialState = {\n    cart: []\n  };\n  const [state, dispatch] = useReducer(CartReducer, initialState); //actions\n  //Add to cart\n\n  const addToCart = product => {\n    dispatch({\n      type: ADD_TO_CART,\n      payload: Object.assign(product, {\n        qty: 2\n      })\n    });\n    window.localStorage.setItem('cart', JSON.stringify(product));\n  }; //Remove from cart\n\n\n  const removeFromCart = id => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      payload: id\n    });\n  }; //Increase cart item quantity\n\n\n  const increaseCartItemQty = id => {\n    dispatch({\n      type: INCREASE_CART_ITEM_QTY,\n      payload: id\n    });\n  }; //decrease cart item quantity\n\n\n  const decreaseCartItemQty = id => {\n    dispatch({\n      type: DECREASE_CART_ITEM_QTY,\n      payload: id\n    });\n  }; //change \n  //clear cart\n\n\n  const clearCart = () => {\n    dispatch({\n      type: CLEAR_CART\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: state.cart,\n      addToCart,\n      removeFromCart,\n      increaseCartItemQty,\n      decreaseCartItemQty,\n      clearCart\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = CartState;\nexport default CartState;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartState\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/context/cart/CartState.js"],"names":["useReducer","CartReducer","CartContext","ADD_TO_CART","REMOVE_FROM_CART","INCREASE_CART_ITEM_QTY","DECREASE_CART_ITEM_QTY","CLEAR_CART","CartState","props","initialState","cart","state","dispatch","addToCart","product","type","payload","Object","assign","qty","window","localStorage","setItem","JSON","stringify","removeFromCart","id","increaseCartItemQty","decreaseCartItemQty","clearCart","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SACEC,WADF,EAEEC,gBAFF,EAGEC,sBAHF,EAIEC,sBAJF,EAKEC,UALF,QAMO,UANP;;;AAQA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE;AADa,GAArB;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACC,WAAD,EAAcS,YAAd,CAApC,CAL2B,CAO3B;AACA;;AACA,QAAMI,SAAS,GAAIC,OAAD,IAAa;AAC7BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEb,WADC;AAEPc,MAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAcJ,OAAd,EAAuB;AAACK,QAAAA,GAAG,EAAG;AAAP,OAAvB;AAFF,KAAD,CAAR;AAIAC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,EAAoCC,IAAI,CAACC,SAAL,CAAeV,OAAf,CAApC;AACD,GAND,CAT2B,CAiB3B;;;AACA,QAAMW,cAAc,GAAIC,EAAD,IAAQ;AAC7Bd,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ,gBADC;AAEPa,MAAAA,OAAO,EAAEU;AAFF,KAAD,CAAR;AAID,GALD,CAlB2B,CAyB3B;;;AACA,QAAMC,mBAAmB,GAAID,EAAD,IAAQ;AAClCd,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEX,sBADC;AAEPY,MAAAA,OAAO,EAAEU;AAFF,KAAD,CAAR;AAID,GALD,CA1B2B,CAiC3B;;;AACA,QAAME,mBAAmB,GAAIF,EAAD,IAAQ;AAClCd,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,sBADC;AAEPW,MAAAA,OAAO,EAAEU;AAFF,KAAD,CAAR;AAID,GALD,CAlC2B,CAyC3B;AAEA;;;AACA,QAAMG,SAAS,GAAG,MAAM;AACtBjB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,IAAI,EAAEC,KAAK,CAACD,IADP;AAELG,MAAAA,SAFK;AAGLY,MAAAA,cAHK;AAILE,MAAAA,mBAJK;AAKLC,MAAAA,mBALK;AAMLC,MAAAA;AANK,KADT;AAAA,cAUGrB,KAAK,CAACsB;AAVT;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhED;;GAAMvB,S;;KAAAA,S;AAkEN,eAAeA,SAAf","sourcesContent":["import { useReducer } from \"react\";\nimport CartReducer from \"./CartReducer\";\nimport CartContext from \"./CartContext\";\n\nimport {\n  ADD_TO_CART,\n  REMOVE_FROM_CART,\n  INCREASE_CART_ITEM_QTY,\n  DECREASE_CART_ITEM_QTY,\n  CLEAR_CART,\n} from \"../types\";\n\nconst CartState = (props) => {\n  const initialState = {\n    cart: [],\n  };\n\n  const [state, dispatch] = useReducer(CartReducer, initialState);\n\n  //actions\n  //Add to cart\n  const addToCart = (product) => {\n    dispatch({\n      type: ADD_TO_CART,\n      payload: Object.assign(product, {qty : 2}),\n    });\n    window.localStorage.setItem('cart', JSON.stringify(product))\n  };\n\n  //Remove from cart\n  const removeFromCart = (id) => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      payload: id,\n    });\n  };\n\n  //Increase cart item quantity\n  const increaseCartItemQty = (id) => {\n    dispatch({\n      type: INCREASE_CART_ITEM_QTY,\n      payload: id,\n    });\n  };\n\n  //decrease cart item quantity\n  const decreaseCartItemQty = (id) => {\n    dispatch({\n      type: DECREASE_CART_ITEM_QTY,\n      payload: id,\n    });\n  };\n\n  //change \n\n  //clear cart\n  const clearCart = () => {\n    dispatch({\n      type: CLEAR_CART,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart: state.cart,\n        addToCart,\n        removeFromCart,\n        increaseCartItemQty,\n        decreaseCartItemQty,\n        clearCart,\n      }}\n    >\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartState;\n"]},"metadata":{},"sourceType":"module"}