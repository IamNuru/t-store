{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/components/context/auth/State.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useReducer } from \"react\";\nimport AuthReducer from \"./Reducer\";\nimport AuthContext from \"./Context\";\nimport axios from \"axios\"; //import variables from types\n\nimport { REGISTER, LOGIN, LOGOUT, UPDATE_PASSWORD, ADD_TO_ORDERS, ERRORS, GET_ORDERS, GET_USER, CLEAR_MESSAGES, SUCCESS_MESSAGES } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: null,\n    orders: [],\n    errors: null,\n    success: null,\n    logedin: false\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //set configuration for making request\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  }; //get token from localstorage if found\n\n  if (localStorage.getItem(\"token\")) {\n    initialState.logedin = localStorage.getItem(\"token\");\n  } else {\n    initialState.logedin = false;\n  } //get authenticated user object\n\n\n  useEffect(() => {\n    const getAuthUser = async () => {\n      const configs = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      };\n      await axios.get(`${process.env.REACT_APP_API_URL}/user`, configs).then(res => {\n        dispatch({\n          type: GET_USER,\n          payload: res.data\n        });\n      }).catch(err => {});\n    };\n\n    getAuthUser(); // eslint-disable-next-line\n  }, [initialState.user]);\n  /** *** ACTIONS *** */\n  //Register new user\n\n  const register = async user => {\n    await axios.post(`${process.env.REACT_APP_API_URL}/register`, user, config).then(res => {\n      dispatch({\n        type: REGISTER,\n        payload: res.data[0]\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //log user in\n\n\n  const login = async user => {\n    await axios.post(`${process.env.REACT_APP_API_URL}/login`, user, config).then(res => {\n      dispatch({\n        type: LOGIN,\n        payload: res.data[0]\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //Clear all errors on the page such as form errors\n\n\n  const setError = err => {\n    dispatch({\n      type: ERRORS,\n      payload: err\n    });\n  }; //log user out\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; //update logged in user password\n\n\n  const updatePassword = async credentials => {\n    await axios.post(`${process.env.REACT_APP_API_URL}/resetpassword`, credentials, config).then(res => {\n      dispatch({\n        type: UPDATE_PASSWORD,\n        payload: res.data\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //forgot password\n\n\n  const sendPasswordResetLink = async credentials => {\n    await axios.post(`http://localhost:8000/api/password/email`, credentials, config).then(res => {\n      console.log(res);\n      dispatch({\n        type: SUCCESS_MESSAGES,\n        payload: res\n      });\n    }).catch(err => {\n      console.log(err.response);\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //add to order\n\n\n  const addToOrders = async order => {\n    await axios.post(`${process.env.REACT_APP_API_URL}/order`, order, config).then(res => {\n      dispatch({\n        type: ADD_TO_ORDERS,\n        payload: res.data[0]\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //get authenticated user orders\n\n\n  const getOrders = async () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/orders`, config).then(res => {\n      dispatch({\n        type: GET_ORDERS,\n        payload: res.data[0].transactions\n      });\n    }).catch(err => {});\n  }; //Clear messages if any\n\n\n  const clearMessages = () => {\n    dispatch({\n      type: CLEAR_MESSAGES\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      users: state.users,\n      logedin: state.logedin,\n      orders: state.orders,\n      errors: state.errors,\n      success: state.success,\n      login,\n      register,\n      logout,\n      updatePassword,\n      addToOrders,\n      setError,\n      getOrders,\n      clearMessages,\n      sendPasswordResetLink\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/context/auth/State.js"],"names":["React","useEffect","useReducer","AuthReducer","AuthContext","axios","REGISTER","LOGIN","LOGOUT","UPDATE_PASSWORD","ADD_TO_ORDERS","ERRORS","GET_ORDERS","GET_USER","CLEAR_MESSAGES","SUCCESS_MESSAGES","AuthState","props","initialState","users","user","orders","errors","success","logedin","state","dispatch","config","headers","Authorization","localStorage","getItem","getAuthUser","configs","get","process","env","REACT_APP_API_URL","then","res","type","payload","data","catch","err","register","post","obj","response","Object","keys","login","setError","logout","updatePassword","credentials","sendPasswordResetLink","console","log","addToOrders","order","getOrders","transactions","clearMessages","children"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useReducer } from \"react\";\nimport AuthReducer from \"./Reducer\";\nimport AuthContext from \"./Context\";\nimport axios from \"axios\";\n\n//import variables from types\nimport {\n  REGISTER,\n  LOGIN,\n  LOGOUT,\n  UPDATE_PASSWORD,\n  ADD_TO_ORDERS,\n  ERRORS,\n  GET_ORDERS,\n  GET_USER,\nCLEAR_MESSAGES,\nSUCCESS_MESSAGES,\n\n\n} from \"../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    users: [],\n    user: null,\n    orders: [],\n    errors: null,\n    success: null,\n    logedin: false,\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //set configuration for making request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"Access-Control-Allow-Origin\": \"*\"\n    },\n  };\n\n  //get token from localstorage if found\n  if (localStorage.getItem(\"token\")) {\n    initialState.logedin = localStorage.getItem(\"token\");\n  } else {\n    initialState.logedin = false;\n  }\n\n  //get authenticated user object\n  useEffect(() => {\n    const getAuthUser = async () => {\n      const configs = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      };\n      await axios\n        .get(`${process.env.REACT_APP_API_URL}/user`, configs)\n        .then((res) => {\n          dispatch({\n            type: GET_USER,\n            payload: res.data,\n          });\n        })\n        .catch((err) => {});\n    };\n    getAuthUser();\n    // eslint-disable-next-line\n  }, [initialState.user]);\n\n  /** *** ACTIONS *** */\n  //Register new user\n  const register = async (user) => {\n    await axios\n      .post(`${process.env.REACT_APP_API_URL}/register`, user, config)\n      .then((res) => {\n        dispatch({\n          type: REGISTER,\n          payload: res.data[0],\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : \"\";\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]],\n        });\n      });\n  };\n\n  //log user in\n  const login = async (user) => {\n    await axios\n      .post(`${process.env.REACT_APP_API_URL}/login`, user, config)\n      .then((res) => {\n        dispatch({\n          type: LOGIN,\n          payload: res.data[0],\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : \"\";\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]],\n        });\n      });\n  };\n\n  //Clear all errors on the page such as form errors\n  const setError = (err) => {\n    dispatch({\n      type: ERRORS,\n      payload: err,\n    });\n  };\n\n  //log user out\n  const logout = () => {\n    dispatch({\n      type: LOGOUT,\n    });\n  };\n\n  //update logged in user password\n  const updatePassword = async (credentials) => {\n    await axios.post(`${process.env.REACT_APP_API_URL}/resetpassword`, credentials, config)\n    .then(res => {\n      dispatch({\n        type: UPDATE_PASSWORD,\n        payload: res.data,\n      });\n    }).catch((err) => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]],\n      });\n    });\n    \n  };\n\n\n  //forgot password\n  const sendPasswordResetLink = async (credentials) => {\n    await axios.post(`http://localhost:8000/api/password/email`, credentials, config)\n    .then(res => {\n      console.log(res)\n      dispatch({\n        type: SUCCESS_MESSAGES,\n        payload: res,\n      });\n    }).catch((err) => {\n      console.log(err.response)\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]],\n      });\n    });\n    \n  };\n\n  //add to order\n  const addToOrders = async (order) => {\n    await axios\n      .post(`${process.env.REACT_APP_API_URL}/order`, order, config)\n      .then((res) => {\n        dispatch({\n          type: ADD_TO_ORDERS,\n          payload: res.data[0],\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : \"\";\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]],\n        });\n      });\n  };\n\n  //get authenticated user orders\n  const getOrders = async () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/orders`, config)\n      .then((res) => {\n        dispatch({\n          type: GET_ORDERS,\n          payload: res.data[0].transactions,\n        });\n      })\n      .catch((err) => {});\n  };\n\n  //Clear messages if any\n  const clearMessages = () =>{\n    dispatch({\n      type:CLEAR_MESSAGES,\n    })\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        users: state.users,\n        logedin: state.logedin,\n        orders: state.orders,\n        errors: state.errors,\n        success: state.success,\n        login,\n        register,\n        logout,\n        updatePassword,\n        addToOrders,\n        setError,\n        getOrders,\n        clearMessages,\n        sendPasswordResetLink,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}