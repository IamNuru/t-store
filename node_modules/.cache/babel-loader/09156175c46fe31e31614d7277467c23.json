{"ast":null,"code":"import { REGISTER, LOGIN, LOGOUT, UPDATE_PASSWORD, ADD_TO_ORDERS } from \"../types\";\n\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case REGISTER:\n      return { ...state,\n        users: [...state.users, action.payload],\n        user: action.payload,\n        logedin: true\n      };\n\n    case LOGIN:\n      return { ...state,\n        user: action.payload,\n        logedin: true\n      };\n\n    case LOGOUT:\n      return { ...state,\n        logedin: false,\n        user: null\n      };\n\n    case UPDATE_PASSWORD:\n      return { ...state,\n        user: { ...state,\n          user: { ...state.user,\n            password: action.payload.newPassword\n          }\n        },\n        users: [...state.users.map(u => u.username === state.user.username ? u.password = action.payload.newPassword : u)]\n      };\n\n    case ADD_TO_ORDERS:\n      return { ...state,\n        orders: [...state.orders, action.payload]\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/context/auth/Reducer.js"],"names":["REGISTER","LOGIN","LOGOUT","UPDATE_PASSWORD","ADD_TO_ORDERS","AuthReducer","state","action","type","users","payload","user","logedin","password","newPassword","map","u","username","orders"],"mappings":"AAAA,SACEA,QADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,eAJF,EAKEC,aALF,QAMO,UANP;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,QAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELG,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACG,OAAxB,CAFF;AAGLC,QAAAA,IAAI,EAAEJ,MAAM,CAACG,OAHR;AAILE,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF,SAAKX,KAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELK,QAAAA,IAAI,EAAEJ,MAAM,CAACG,OAFR;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKV,MAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELM,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAMF,SAAKR,eAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELK,QAAAA,IAAI,EAAE,EAAC,GAAGL,KAAJ;AAAWK,UAAAA,IAAI,EAAE,EAAC,GAAGL,KAAK,CAACK,IAAV;AAAgBE,YAAAA,QAAQ,EAACN,MAAM,CAACG,OAAP,CAAeI;AAAxC;AAAjB,SAFD;AAGLL,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAN,CAAYM,GAAZ,CAAiBC,CAAD,IAC3BA,CAAC,CAACC,QAAF,KAAeX,KAAK,CAACK,IAAN,CAAWM,QAA1B,GAAqCD,CAAC,CAACH,QAAF,GAAaN,MAAM,CAACG,OAAP,CAAeI,WAAjE,GAA+EE,CADpE,CAAJ;AAHF,OAAP;;AAQF,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELY,QAAAA,MAAM,EAAE,CAAC,GAAGZ,KAAK,CAACY,MAAV,EAAkBX,MAAM,CAACG,OAAzB;AAFH,OAAP;;AAKF;AACE,aAAO,EACL,GAAGJ;AADE,OAAP;AAvCJ;AA2CD,CA5CD;;KAAMD,W;AA8CN,eAAeA,WAAf","sourcesContent":["import {\n  REGISTER,\n  LOGIN,\n  LOGOUT,\n  UPDATE_PASSWORD,\n  ADD_TO_ORDERS\n} from \"../types\";\n\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case REGISTER:\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n        user: action.payload,\n        logedin: true\n      };\n\n    case LOGIN:\n      return {\n        ...state,\n        user: action.payload,\n        logedin: true\n      };\n\n    case LOGOUT:\n      return {\n        ...state,\n        logedin: false,\n        user: null\n      };\n\n    case UPDATE_PASSWORD:\n      return {\n        ...state,\n        user: {...state, user: {...state.user, password:action.payload.newPassword}},\n        users: [...state.users.map((u) => \n        u.username === state.user.username ? u.password = action.payload.newPassword : u)]\n      };\n      \n\n    case ADD_TO_ORDERS:\n      return {\n        ...state,\n        orders: [...state.orders, action.payload]\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default AuthReducer;\n"]},"metadata":{},"sourceType":"module"}