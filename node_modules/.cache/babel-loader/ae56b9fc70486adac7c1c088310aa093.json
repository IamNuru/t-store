{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/components/context/auth/State.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useReducer } from \"react\";\nimport AuthReducer from \"./Reducer\";\nimport AuthContext from \"./Context\";\nimport axios from \"axios\"; //import variables from types\n\nimport { REGISTER, LOGIN, LOGOUT, ADD_TO_ORDERS, ERRORS, GET_ORDERS, GET_USER, CLEAR_MESSAGES, SUCCESS_MESSAGES, SET_lOADING } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: null,\n    orders: [],\n    errors: null,\n    success: null,\n    logedin: false,\n    loading: false\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //set configuration for making request\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  }; //get token from localstorage if found\n\n  if (localStorage.getItem(\"token\")) {\n    initialState.logedin = localStorage.getItem(\"token\");\n  } else {\n    initialState.logedin = false;\n  } //get authenticated user object\n\n\n  useEffect(() => {\n    const getAuthUser = async () => {\n      const configs = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      };\n      await axios.get(`${process.env.REACT_APP_API_URL}/user`, configs).then(res => {\n        dispatch({\n          type: GET_USER,\n          payload: res.data\n        });\n      }).catch(err => {});\n    };\n\n    getAuthUser(); // eslint-disable-next-line\n  }, [initialState.user]);\n  /** *** ACTIONS *** */\n  //Register new user\n\n  const register = async user => {\n    await axios.post(`${process.env.REACT_APP_API_URL}/register`, user, config).then(res => {\n      dispatch({\n        type: REGISTER,\n        payload: res.data[0]\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //log user in\n\n\n  const login = async user => {\n    await axios.post(`${process.env.REACT_APP_API_URL}/login`, user, config).then(res => {\n      dispatch({\n        type: LOGIN,\n        payload: res.data[0]\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //Clear all errors on the page such as form errors\n\n\n  const setError = err => {\n    dispatch({\n      type: ERRORS,\n      payload: err\n    });\n  }; //log user out\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; //Reset user that forgot his/her password\n\n\n  const resetPassword = async credentials => {\n    await axios.post(`http://localhost:8000/api/password/reset`, credentials, config).then(res => {\n      dispatch({\n        type: SUCCESS_MESSAGES,\n        payload: res.data\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //update logged in user password\n\n\n  const updatePassword = async credentials => {\n    await axios.post(`${process.env.REACT_APP_API_URL}/resetpassword`, credentials, config).then(res => {\n      dispatch({\n        type: SUCCESS_MESSAGES,\n        payload: res.data.message\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //forgot password\n\n\n  const sendPasswordResetLink = async credentials => {\n    await axios.post(`http://localhost:8000/api/password/email`, credentials, config).then(res => {\n      console.log(res.data);\n      dispatch({\n        type: SUCCESS_MESSAGES,\n        payload: res.data.message\n      });\n    }).catch(err => {\n      console.log(err.response);\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //add to order\n\n\n  const addToOrders = async order => {\n    await axios.post(`${process.env.REACT_APP_API_URL}/order`, order, config).then(res => {\n      dispatch({\n        type: ADD_TO_ORDERS,\n        payload: res.data[0]\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //get authenticated user orders\n\n\n  const getOrders = async () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/orders`, config).then(res => {\n      dispatch({\n        type: GET_ORDERS,\n        payload: res.data[0].transactions\n      });\n    }).catch(err => {});\n  }; //Clear messages if any\n\n\n  const clearMessages = () => {\n    dispatch({\n      type: CLEAR_MESSAGES\n    });\n  }; //Clear messages if any\n\n\n  const setLoading = loadValue => {\n    dispatch({\n      type: SET_lOADING,\n      payload: loadValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      users: state.users,\n      logedin: state.logedin,\n      orders: state.orders,\n      errors: state.errors,\n      success: state.success,\n      loading: state.loading,\n      login,\n      register,\n      logout,\n      updatePassword,\n      resetPassword,\n      addToOrders,\n      setError,\n      getOrders,\n      clearMessages,\n      sendPasswordResetLink,\n      setLoading\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/context/auth/State.js"],"names":["React","useEffect","useReducer","AuthReducer","AuthContext","axios","REGISTER","LOGIN","LOGOUT","ADD_TO_ORDERS","ERRORS","GET_ORDERS","GET_USER","CLEAR_MESSAGES","SUCCESS_MESSAGES","SET_lOADING","AuthState","props","initialState","users","user","orders","errors","success","logedin","loading","state","dispatch","config","headers","Authorization","localStorage","getItem","getAuthUser","configs","get","process","env","REACT_APP_API_URL","then","res","type","payload","data","catch","err","register","post","obj","response","Object","keys","login","setError","logout","resetPassword","credentials","updatePassword","message","sendPasswordResetLink","console","log","addToOrders","order","getOrders","transactions","clearMessages","setLoading","loadValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SACEC,QADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,aAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,QAPF,EAQEC,cARF,EASEC,gBATF,EAUEC,WAVF,QAWO,UAXP;;;AAaA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,IAFa;AAGnBC,IAAAA,MAAM,EAAE,EAHW;AAInBC,IAAAA,MAAM,EAAE,IAJW;AAKnBC,IAAAA,OAAO,EAAE,IALU;AAMnBC,IAAAA,OAAO,EAAE,KANU;AAOnBC,IAAAA,OAAO,EAAE;AAPU,GAArB;AAUA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBzB,UAAU,CAACC,WAAD,EAAce,YAAd,CAApC,CAX2B,CAa3B;;AACA,QAAMU,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAFhD;AAGP,qCAA+B;AAHxB;AADI,GAAf,CAd2B,CAsB3B;;AACA,MAAID,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjCd,IAAAA,YAAY,CAACM,OAAb,GAAuBO,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAvB;AACD,GAFD,MAEO;AACLd,IAAAA,YAAY,CAACM,OAAb,GAAuB,KAAvB;AACD,GA3B0B,CA6B3B;;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgC,WAAW,GAAG,YAAY;AAC9B,YAAMC,OAAO,GAAG;AACdL,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAFhD;AADK,OAAhB;AAMA,YAAM3B,KAAK,CACR8B,GADG,CACE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,OADlC,EAC0CJ,OAD1C,EAEHK,IAFG,CAEGC,GAAD,IAAS;AACbb,QAAAA,QAAQ,CAAC;AACPc,UAAAA,IAAI,EAAE7B,QADC;AAEP8B,UAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,SAAD,CAAR;AAID,OAPG,EAQHC,KARG,CAQIC,GAAD,IAAS,CAAE,CARd,CAAN;AASD,KAhBD;;AAiBAZ,IAAAA,WAAW,GAlBG,CAmBd;AACD,GApBQ,EAoBN,CAACf,YAAY,CAACE,IAAd,CApBM,CAAT;AAsBA;AACA;;AACA,QAAM0B,QAAQ,GAAG,MAAO1B,IAAP,IAAgB;AAC/B,UAAMf,KAAK,CACR0C,IADG,CACG,GAAEX,OAAO,CAACC,GAAR,CAAYC,iBAAkB,WADnC,EAC+ClB,IAD/C,EACqDQ,MADrD,EAEHW,IAFG,CAEGC,GAAD,IAAS;AACbb,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAEnC,QADC;AAEPoC,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAAS,CAAT;AAFF,OAAD,CAAR;AAID,KAPG,EAQHC,KARG,CAQIC,GAAD,IAAS;AACd,UAAIG,GAAG,GAAGH,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAAlB,GAA2BuB,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAA7C,GAAsD,EAAhE;AACAK,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE/B,MADC;AAEPgC,QAAAA,OAAO,EAAEM,GAAG,CAACE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiB,CAAjB,CAAD;AAFL,OAAD,CAAR;AAID,KAdG,CAAN;AAeD,GAhBD,CAtD2B,CAwE3B;;;AACA,QAAMI,KAAK,GAAG,MAAOhC,IAAP,IAAgB;AAC5B,UAAMf,KAAK,CACR0C,IADG,CACG,GAAEX,OAAO,CAACC,GAAR,CAAYC,iBAAkB,QADnC,EAC4ClB,IAD5C,EACkDQ,MADlD,EAEHW,IAFG,CAEGC,GAAD,IAAS;AACbb,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAElC,KADC;AAEPmC,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAAS,CAAT;AAFF,OAAD,CAAR;AAID,KAPG,EAQHC,KARG,CAQIC,GAAD,IAAS;AACd,UAAIG,GAAG,GAAGH,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAAlB,GAA2BuB,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAA7C,GAAsD,EAAhE;AACAK,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE/B,MADC;AAEPgC,QAAAA,OAAO,EAAEM,GAAG,CAACE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiB,CAAjB,CAAD;AAFL,OAAD,CAAR;AAID,KAdG,CAAN;AAeD,GAhBD,CAzE2B,CA2F3B;;;AACA,QAAMK,QAAQ,GAAIR,GAAD,IAAS;AACxBlB,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAE/B,MADC;AAEPgC,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID,GALD,CA5F2B,CAmG3B;;;AACA,QAAMS,MAAM,GAAG,MAAM;AACnB3B,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAEjC;AADC,KAAD,CAAR;AAGD,GAJD,CApG2B,CA0G3B;;;AACA,QAAM+C,aAAa,GAAG,MAAOC,WAAP,IAAuB;AAC3C,UAAMnD,KAAK,CACR0C,IADG,CACG,0CADH,EAC8CS,WAD9C,EAC2D5B,MAD3D,EAEHW,IAFG,CAEGC,GAAD,IAAS;AACbb,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE3B,gBADC;AAEP4B,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,OAAD,CAAR;AAID,KAPG,EAQHC,KARG,CAQIC,GAAD,IAAS;AACd,UAAIG,GAAG,GAAGH,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAAlB,GAA2BuB,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAA7C,GAAsD,EAAhE;AACAK,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE/B,MADC;AAEPgC,QAAAA,OAAO,EAAEM,GAAG,CAACE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiB,CAAjB,CAAD;AAFL,OAAD,CAAR;AAID,KAdG,CAAN;AAeD,GAhBD,CA3G2B,CA6H3B;;;AACA,QAAMS,cAAc,GAAG,MAAOD,WAAP,IAAuB;AAC5C,UAAMnD,KAAK,CACR0C,IADG,CAED,GAAEX,OAAO,CAACC,GAAR,CAAYC,iBAAkB,gBAF/B,EAGFkB,WAHE,EAIF5B,MAJE,EAMHW,IANG,CAMGC,GAAD,IAAS;AACbb,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE3B,gBADC;AAEP4B,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASe;AAFX,OAAD,CAAR;AAID,KAXG,EAYHd,KAZG,CAYIC,GAAD,IAAS;AACd,UAAIG,GAAG,GAAGH,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAAlB,GAA2BuB,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAA7C,GAAsD,EAAhE;AACAK,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE/B,MADC;AAEPgC,QAAAA,OAAO,EAAEM,GAAG,CAACE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiB,CAAjB,CAAD;AAFL,OAAD,CAAR;AAID,KAlBG,CAAN;AAmBD,GApBD,CA9H2B,CAoJ3B;;;AACA,QAAMW,qBAAqB,GAAG,MAAOH,WAAP,IAAuB;AACnD,UAAMnD,KAAK,CACR0C,IADG,CACG,0CADH,EAC8CS,WAD9C,EAC2D5B,MAD3D,EAEHW,IAFG,CAEGC,GAAD,IAAS;AACboB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAG,CAACG,IAAhB;AACAhB,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE3B,gBADC;AAEP4B,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASe;AAFX,OAAD,CAAR;AAID,KARG,EASHd,KATG,CASIC,GAAD,IAAS;AACde,MAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACI,QAAhB;AACA,UAAID,GAAG,GAAGH,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAAlB,GAA2BuB,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAA7C,GAAsD,EAAhE;AACAK,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE/B,MADC;AAEPgC,QAAAA,OAAO,EAAEM,GAAG,CAACE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiB,CAAjB,CAAD;AAFL,OAAD,CAAR;AAID,KAhBG,CAAN;AAiBD,GAlBD,CArJ2B,CAyK3B;;;AACA,QAAMc,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnC,UAAM1D,KAAK,CACR0C,IADG,CACG,GAAEX,OAAO,CAACC,GAAR,CAAYC,iBAAkB,QADnC,EAC4CyB,KAD5C,EACmDnC,MADnD,EAEHW,IAFG,CAEGC,GAAD,IAAS;AACbb,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAEhC,aADC;AAEPiC,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAAS,CAAT;AAFF,OAAD,CAAR;AAID,KAPG,EAQHC,KARG,CAQIC,GAAD,IAAS;AACd,UAAIG,GAAG,GAAGH,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAAlB,GAA2BuB,GAAG,CAACI,QAAJ,CAAaN,IAAb,CAAkBrB,MAA7C,GAAsD,EAAhE;AACAK,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE/B,MADC;AAEPgC,QAAAA,OAAO,EAAEM,GAAG,CAACE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiB,CAAjB,CAAD;AAFL,OAAD,CAAR;AAID,KAdG,CAAN;AAeD,GAhBD,CA1K2B,CA4L3B;;;AACA,QAAMgB,SAAS,GAAG,YAAY;AAC5B3D,IAAAA,KAAK,CACF8B,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,SADxC,EACkDV,MADlD,EAEGW,IAFH,CAESC,GAAD,IAAS;AACbb,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE9B,UADC;AAEP+B,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYsB;AAFd,OAAD,CAAR;AAID,KAPH,EAQGrB,KARH,CAQUC,GAAD,IAAS,CAAE,CARpB;AASD,GAVD,CA7L2B,CAyM3B;;;AACA,QAAMqB,aAAa,GAAG,MAAM;AAC1BvC,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAE5B;AADC,KAAD,CAAR;AAGD,GAJD,CA1M2B,CAgN3B;;;AACA,QAAMsD,UAAU,GAAIC,SAAD,IAAe;AAChCzC,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAE1B,WADC;AAEP2B,MAAAA,OAAO,EAAE0B;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLhD,MAAAA,IAAI,EAAEM,KAAK,CAACN,IADP;AAELD,MAAAA,KAAK,EAAEO,KAAK,CAACP,KAFR;AAGLK,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAHV;AAILH,MAAAA,MAAM,EAAEK,KAAK,CAACL,MAJT;AAKLC,MAAAA,MAAM,EAAEI,KAAK,CAACJ,MALT;AAMLC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OANV;AAOLE,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAPV;AAQL2B,MAAAA,KARK;AASLN,MAAAA,QATK;AAULQ,MAAAA,MAVK;AAWLG,MAAAA,cAXK;AAYLF,MAAAA,aAZK;AAaLO,MAAAA,WAbK;AAcLT,MAAAA,QAdK;AAeLW,MAAAA,SAfK;AAgBLE,MAAAA,aAhBK;AAiBLP,MAAAA,qBAjBK;AAkBLQ,MAAAA;AAlBK,KADT;AAAA,cAsBGlD,KAAK,CAACoD;AAtBT;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAlPD;;GAAMrD,S;;KAAAA,S;AAoPN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useReducer } from \"react\";\nimport AuthReducer from \"./Reducer\";\nimport AuthContext from \"./Context\";\nimport axios from \"axios\";\n\n//import variables from types\nimport {\n  REGISTER,\n  LOGIN,\n  LOGOUT,\n  ADD_TO_ORDERS,\n  ERRORS,\n  GET_ORDERS,\n  GET_USER,\n  CLEAR_MESSAGES,\n  SUCCESS_MESSAGES,\n  SET_lOADING,\n} from \"../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    users: [],\n    user: null,\n    orders: [],\n    errors: null,\n    success: null,\n    logedin: false,\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //set configuration for making request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  };\n\n  //get token from localstorage if found\n  if (localStorage.getItem(\"token\")) {\n    initialState.logedin = localStorage.getItem(\"token\");\n  } else {\n    initialState.logedin = false;\n  }\n\n  //get authenticated user object\n  useEffect(() => {\n    const getAuthUser = async () => {\n      const configs = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      };\n      await axios\n        .get(`${process.env.REACT_APP_API_URL}/user`, configs)\n        .then((res) => {\n          dispatch({\n            type: GET_USER,\n            payload: res.data,\n          });\n        })\n        .catch((err) => {});\n    };\n    getAuthUser();\n    // eslint-disable-next-line\n  }, [initialState.user]);\n\n  /** *** ACTIONS *** */\n  //Register new user\n  const register = async (user) => {\n    await axios\n      .post(`${process.env.REACT_APP_API_URL}/register`, user, config)\n      .then((res) => {\n        dispatch({\n          type: REGISTER,\n          payload: res.data[0],\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : \"\";\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]],\n        });\n      });\n  };\n\n  //log user in\n  const login = async (user) => {\n    await axios\n      .post(`${process.env.REACT_APP_API_URL}/login`, user, config)\n      .then((res) => {\n        dispatch({\n          type: LOGIN,\n          payload: res.data[0],\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : \"\";\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]],\n        });\n      });\n  };\n\n  //Clear all errors on the page such as form errors\n  const setError = (err) => {\n    dispatch({\n      type: ERRORS,\n      payload: err,\n    });\n  };\n\n  //log user out\n  const logout = () => {\n    dispatch({\n      type: LOGOUT,\n    });\n  };\n\n  //Reset user that forgot his/her password\n  const resetPassword = async (credentials) => {\n    await axios\n      .post(`http://localhost:8000/api/password/reset`, credentials, config)\n      .then((res) => {\n        dispatch({\n          type: SUCCESS_MESSAGES,\n          payload: res.data,\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : \"\";\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]],\n        });\n      });\n  };\n\n  //update logged in user password\n  const updatePassword = async (credentials) => {\n    await axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/resetpassword`,\n        credentials,\n        config\n      )\n      .then((res) => {\n        dispatch({\n          type: SUCCESS_MESSAGES,\n          payload: res.data.message,\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : \"\";\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]],\n        });\n      });\n  };\n\n  //forgot password\n  const sendPasswordResetLink = async (credentials) => {\n    await axios\n      .post(`http://localhost:8000/api/password/email`, credentials, config)\n      .then((res) => {\n        console.log(res.data);\n        dispatch({\n          type: SUCCESS_MESSAGES,\n          payload: res.data.message,\n        });\n      })\n      .catch((err) => {\n        console.log(err.response);\n        var obj = err.response.data.errors ? err.response.data.errors : \"\";\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]],\n        });\n      });\n  };\n\n  //add to order\n  const addToOrders = async (order) => {\n    await axios\n      .post(`${process.env.REACT_APP_API_URL}/order`, order, config)\n      .then((res) => {\n        dispatch({\n          type: ADD_TO_ORDERS,\n          payload: res.data[0],\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : \"\";\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]],\n        });\n      });\n  };\n\n  //get authenticated user orders\n  const getOrders = async () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/orders`, config)\n      .then((res) => {\n        dispatch({\n          type: GET_ORDERS,\n          payload: res.data[0].transactions,\n        });\n      })\n      .catch((err) => {});\n  };\n\n  //Clear messages if any\n  const clearMessages = () => {\n    dispatch({\n      type: CLEAR_MESSAGES,\n    });\n  };\n\n  //Clear messages if any\n  const setLoading = (loadValue) => {\n    dispatch({\n      type: SET_lOADING,\n      payload: loadValue\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        users: state.users,\n        logedin: state.logedin,\n        orders: state.orders,\n        errors: state.errors,\n        success: state.success,\n        loading: state.loading,\n        login,\n        register,\n        logout,\n        updatePassword,\n        resetPassword,\n        addToOrders,\n        setError,\n        getOrders,\n        clearMessages,\n        sendPasswordResetLink,\n        setLoading\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}