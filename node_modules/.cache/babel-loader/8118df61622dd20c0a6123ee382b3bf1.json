{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"./components/context/auth/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    logedin,\n    user,\n    setLogedIn\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const getAuthUser = async () => {\n      const configs = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      };\n      await axios.get(`${process.env.REACT_APP_API_URL}/user`, configs).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    getAuthUser(); // eslint-disable-next-line\n  }, [user, logedin]);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (logedin) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...rest,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 28\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 28\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProtectedRoute, \"3obhLSYBbXu5bGsVWLAsWNGI7no=\");\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/ProtectedRoute.js"],"names":["React","useContext","useEffect","useState","axios","Route","Redirect","AuthContext","ProtectedRoute","component","Component","rest","logedin","user","setLogedIn","getAuthUser","configs","headers","Authorization","localStorage","getItem","get","process","env","REACT_APP_API_URL","then","res","console","log","catch","err","props","pathname","state","from","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,mCAAxB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAsC;AAAA;;AACzD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAAgCb,UAAU,CAACM,WAAD,CAAhD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,WAAW,GAAG,YAAY;AAC9B,YAAMC,OAAO,GAAG;AACdC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAFhD;AADK,OAAhB;AAMA,YAAMhB,KAAK,CACRiB,GADG,CACE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,OADlC,EAC0CR,OAD1C,EAEHS,IAFG,CAEGC,GAAD,IAAS;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAJG,EAKHG,KALG,CAKIC,GAAD,IAAS;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,OAPG,CAAN;AAQD,KAfD;;AAgBAf,IAAAA,WAAW,GAjBC,CAkBZ;AACD,GAnBM,EAmBJ,CAACF,IAAD,EAAOD,OAAP,CAnBI,CAAT;AAqBA,sBACI,QAAC,KAAD,OAAYD,IAAZ;AAAmB,IAAA,MAAM,EACrBoB,KAAK,IAAG;AACJ,UAAGnB,OAAH,EAAW;AACP,4BAAO,QAAC,SAAD,OAAeD,IAAf;AAAA,aAAyBoB;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEK;AACD,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EACf;AACIC,YAAAA,QAAQ,EAAE,QADd;AAEIC,YAAAA,KAAK,EAAC;AACFC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AADV;AAFV;AADG;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQH;AACJ;AAdL;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA5CD;;GAAM3B,c;;KAAAA,c;AA6CN,eAAeA,cAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\"\nimport axios from 'axios';\nimport { Route, Redirect } from \"react-router-dom\"\nimport AuthContext from \"./components/context/auth/Context\"\n\nconst ProtectedRoute = ({ component: Component, ...rest}) => {\n    const { logedin, user, setLogedIn } = useContext(AuthContext);\n    \n    useEffect(() => {\n        const getAuthUser = async () => {\n          const configs = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          };\n          await axios\n            .get(`${process.env.REACT_APP_API_URL}/user`, configs)\n            .then((res) => {\n                console.log(res)\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n        };\n        getAuthUser();\n        // eslint-disable-next-line\n      }, [user, logedin]);\n\n    return (\n        <Route { ...rest } render={\n            props =>{\n                if(logedin){\n                    return <Component {...rest} {...props} />\n                }else{\n                    return <Redirect to={\n                        {\n                            pathname: \"/login\",\n                            state:{\n                                from: props.location\n                            }\n                        }\n                    } />\n                }\n            }\n        }>\n\n        </Route>\n    )\n}\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}