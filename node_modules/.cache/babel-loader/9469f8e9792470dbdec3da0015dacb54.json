{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/components/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { withRouter } from 'react-router';\nimport ProductsContext from './context/products/ProductsContext';\nimport ReactPaginate from 'react-paginate';\nimport Item from \"./Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchedItem = props => {\n  _s();\n\n  console.log(props.match.params.txt);\n  const productsContext = useContext(ProductsContext);\n  const {\n    searchedItems,\n    getProducts\n  } = productsContext;\n  /* const [offset, setOffset] = useState(0);\n  const [data, setData] = useState([]);\n  const [perPage, setPerPage] = useState(9)\n  const [pageCount, setPageCount] = useState(0)\n   const slice = searchedItems.slice(offset, offset + perPage)\n  setPageCount(Math.ceil(data.length / perPage)) */\n\n  /* const handlePageClick = e =>{\n      const selectedPage = e.selected;\n      setOffset(selectedPage + 1)\n  } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-3 gap-5\",\n    children: searchedItems !== null ? searchedItems.length > 0 ? searchedItems.map((product, index) => {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        product: product\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 32\n      }, this);\n    }) : \"No data\" : 'loading...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchedItem, \"BgfUU8K6eh+PFHK+BMuD5wuyTp0=\");\n\n_c = SearchedItem;\nexport default _c2 = withRouter(SearchedItem);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchedItem\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/SearchPage.js"],"names":["React","useContext","useEffect","useState","withRouter","ProductsContext","ReactPaginate","Item","SearchedItem","props","console","log","match","params","txt","productsContext","searchedItems","getProducts","length","map","product","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,GAA/B;AACF,QAAMC,eAAe,GAAGd,UAAU,CAACI,eAAD,CAAlC;AACA,QAAM;AAACW,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAA+BF,eAArC;AAEA;AACF;AACA;AACA;AACA;AACA;;AAGI;AACJ;AACA;AACA;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,oFAAf;AAAA,cAEQC,aAAa,KAAK,IAAlB,GACIA,aAAa,CAACE,MAAd,GAAuB,CAAvB,GACIF,aAAa,CAACG,GAAd,CAAkB,CAACC,OAAD,EAAUC,KAAV,KAAmB;AACjC,0BAAO,QAAC,IAAD;AAAM,QAAA,OAAO,EAAED;AAAf,SAA6BC,KAA7B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,CADJ,GAII,SALR,GAME;AARV;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA5CD;;GAAMb,Y;;KAAAA,Y;AA8CN,qBAAeJ,UAAU,CAACI,YAAD,CAAzB","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { withRouter } from 'react-router'\nimport ProductsContext from './context/products/ProductsContext';\nimport ReactPaginate from 'react-paginate'\nimport Item from \"./Item\";\n\nconst SearchedItem = (props) => {\n    console.log(props.match.params.txt)\n  const productsContext = useContext(ProductsContext);\n  const {searchedItems, getProducts} = productsContext;\n\n  /* const [offset, setOffset] = useState(0);\n  const [data, setData] = useState([]);\n  const [perPage, setPerPage] = useState(9)\n  const [pageCount, setPageCount] = useState(0)\n\n  const slice = searchedItems.slice(offset, offset + perPage)\n  setPageCount(Math.ceil(data.length / perPage)) */\n\n    /* const handlePageClick = e =>{\n        const selectedPage = e.selected;\n        setOffset(selectedPage + 1)\n    } */\n\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-3 gap-5\">\n        {\n            searchedItems !== null ? (\n                searchedItems.length > 0 ? (\n                    searchedItems.map((product, index)=> {\n                        return(<Item product={product} key={index}/>)\n                    }) \n                ) : \"No data\"\n            ):'loading...'\n        }\n        {/* <ReactPaginate \n            previousLabel={\"Prev\"}\n            nextLabel={\"Next\"}\n            breakLabel={\"...\"}\n            breakClassName={\"break-me\"}\n            pageCount={pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={handlePageClick}\n            containerClassName={\"pagination\"}\n            subContainerClassName={\"pages paginatio\"}\n            activeClassName={\"active\"}\n        /> */}\n    </div>\n  );\n};\n\nexport default withRouter(SearchedItem);\n"]},"metadata":{},"sourceType":"module"}