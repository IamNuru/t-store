{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/components/auth/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../context/auth/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = props => {\n  _s();\n\n  const authContext = useContext(AuthContext);\n  const {\n    resetPassword,\n    logedin,\n    errors,\n    setError\n  } = authContext; // set state\n\n  const [stayLogedIn, setStayLogedIn] = useState(logedin);\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n    gender: \"m\"\n  });\n  useEffect(() => {\n    setError(\"\");\n\n    if (logedin) {\n      props.history.push(\"/\");\n    } // eslint-disable-next-line\n\n  }, [logedin]); //destructure state objects\n\n  const {\n    email,\n    password,\n    password_confirmation\n  } = credentials; //on change of inputs\n\n  const onChange = e => {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  }; // toggle stay logged in\n\n\n  const changeStayLogedInStatus = () => {\n    setStayLogedIn(!stayLogedIn);\n  }; // register new user\n\n\n  const resetUserPasswordForm = e => {\n    e.preventDefault();\n    setError(\"\");\n\n    if (email === \"\" || password === \"\") {\n      setError(\"Fill in your credentials\");\n      return false;\n    } else if (password !== password_confirmation) {\n      setError(`Password mismatched`);\n    } else {\n      //setLogin(credentials)\n      resetPassword(credentials);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-1 block bg-gray-100 min-h-96 w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: resetUserPasswordForm,\n      className: \"block rounded-md mt-2 h-full px-4 pt-4 pb-8 w-full m-auto md:mt-24 bg-gray-300 md:w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"w-full text-center mt-1 mb-2 font-bold text-2xl\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: email,\n        onChange: onChange,\n        autoComplete: \"off\",\n        className: \"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: onChange,\n        placeholder: \"Password\",\n        className: \"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password_confirmation\",\n        value: password_confirmation,\n        onChange: onChange,\n        placeholder: \"Confirm password\",\n        className: \"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-2 flex mt-2 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"checkbox\",\n          value: stayLogedIn,\n          onChange: changeStayLogedInStatus,\n          className: \"pl-2 w-4 rounded-full border-1 outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-sm pl-2\",\n          children: \" Select to stay logged in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), errors !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-red-600 text-sm py-2 italic\",\n        children: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"py-1 mt-4 w-full rounded-full border-1 bg-purple-600 text-white font-bold text-xl md:w-48 m-auto text-center outline-none\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"RRvhgfXQdB34JuKqO5PRhR+j2Ro=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/auth/ResetPassword.js"],"names":["React","useContext","useState","useEffect","Link","AuthContext","ResetPassword","props","authContext","resetPassword","logedin","errors","setError","stayLogedIn","setStayLogedIn","credentials","setCredentials","email","password","password_confirmation","gender","history","push","onChange","e","target","name","value","changeStayLogedInStatus","resetUserPasswordForm","preventDefault"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../context/auth/Context\";\n\nconst ResetPassword = (props) => {\n  const authContext = useContext(AuthContext);\n  const { resetPassword, logedin, errors, setError } = authContext;\n  // set state\n  const [stayLogedIn, setStayLogedIn] = useState(logedin);\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n    gender: \"m\",\n  });\n\n  useEffect(() => {\n    setError(\"\");\n    if (logedin) {\n      props.history.push(\"/\");\n    }\n\n    // eslint-disable-next-line\n  }, [logedin]);\n\n  //destructure state objects\n  const {email, password, password_confirmation } = credentials;\n  //on change of inputs\n  const onChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n  // toggle stay logged in\n  const changeStayLogedInStatus = () => {\n    setStayLogedIn(!stayLogedIn);\n  };\n\n  // register new user\n  const resetUserPasswordForm = (e) => {\n    e.preventDefault();\n    setError(\"\");\n    if (email === \"\" || password === \"\") {\n      setError(\"Fill in your credentials\");\n      return false;\n    } else if (password !== password_confirmation) {\n      setError(`Password mismatched`);\n    } else {\n      //setLogin(credentials)\n      resetPassword(credentials);\n    }\n  };\n\n  return (\n    <div className=\"p-1 block bg-gray-100 min-h-96 w-full\">\n      <form\n        onSubmit={resetUserPasswordForm}\n        className=\"block rounded-md mt-2 h-full px-4 pt-4 pb-8 w-full m-auto md:mt-24 bg-gray-300 md:w-96\"\n      >\n        <h2 className=\"w-full text-center mt-1 mb-2 font-bold text-2xl\">\n          Reset Password\n        </h2>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={onChange}\n          autoComplete=\"off\"\n          className=\"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={onChange}\n          placeholder=\"Password\"\n          className=\"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\"\n        />\n        <input\n          type=\"password\"\n          name=\"password_confirmation\"\n          value={password_confirmation}\n          onChange={onChange}\n          placeholder=\"Confirm password\"\n          className=\"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\"\n        />\n\n        <div className=\"ml-2 flex mt-2 mb-2\">\n          <input\n            type=\"checkbox\"\n            name=\"checkbox\"\n            value={stayLogedIn}\n            onChange={changeStayLogedInStatus}\n            className=\"pl-2 w-4 rounded-full border-1 outline-none\"\n          />\n          <label className=\"text-sm pl-2\"> Select to stay logged in</label>\n        </div>\n        {errors !== null && (\n          <p className=\"text-center text-red-600 text-sm py-2 italic\">\n            {errors}\n          </p>\n        )}\n        <button\n          type=\"submit\"\n          className=\"py-1\n           mt-4 w-full rounded-full border-1 bg-purple-600\n           text-white font-bold text-xl md:w-48 m-auto text-center outline-none\"\n        >\n          Confirm\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}