{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/components/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { withRouter } from 'react-router';\nimport ProductsContext from './context/products/ProductsContext';\nimport ReactPaginate from 'react-paginate';\nimport Item from \"./Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchedItem = props => {\n  _s();\n\n  const productsContext = useContext(ProductsContext);\n  const {\n    searchProducts,\n    getProducts,\n    searchedItems\n  } = productsContext;\n  /*useEffect(() => {\n      getProducts()\n      searchProducts(props.match.params.txt);\n      // eslint-disable-next-line\n  },[getProducts])*/\n\n  const [offset, setOffset] = useState(0);\n  const [data, setData] = useState([]);\n  const [perPage, setPerPage] = useState(3);\n  const [pageCount, setPageCount] = useState(0);\n\n  const getData = () => {\n    //fetch data\n    //slice data\n    const slice = searchedItems !== null && searchedItems.slice(offset, offset + perPage);\n    setPageCount(Math.ceil(searchedItems.length / perPage));\n  };\n\n  useEffect(() => {\n    getData();\n  }, [offset]);\n  const slice = searchedItems !== null && searchedItems.slice(offset, offset + perPage);\n\n  const handlePageClick = e => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-3 gap-5\",\n      children: searchedItems !== null ? searchedItems.length > 0 ? slice.map((product, index) => {\n        return /*#__PURE__*/_jsxDEV(Item, {\n          product: product\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 32\n        }, this);\n      }) : \"No data\" : 'loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"Prev\",\n      nextLabel: \"Next\",\n      breakLabel: \"...\",\n      breakClassName: \"break-me\",\n      pageCount: pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: handlePageClick,\n      containerClassName: \"pagination w-full bg-purple-500 flex justify-center\",\n      subContainerClassName: \"pages pagination\",\n      activeClassName: \"active\",\n      pageClassName: \"px-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchedItem, \"p0+h91Qso3FidEJZ7s1vxwu45SA=\");\n\n_c = SearchedItem;\nexport default _c2 = withRouter(SearchedItem);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchedItem\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/SearchPage.js"],"names":["React","useContext","useEffect","useState","withRouter","ProductsContext","ReactPaginate","Item","SearchedItem","props","productsContext","searchProducts","getProducts","searchedItems","offset","setOffset","data","setData","perPage","setPerPage","pageCount","setPageCount","getData","slice","Math","ceil","length","handlePageClick","e","selectedPage","selected","map","product","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,eAAe,GAAGT,UAAU,CAACI,eAAD,CAAlC;AACA,QAAM;AAACM,IAAAA,cAAD;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA;AAA/B,MAAgDH,eAAtD;AAEE;AACJ;AACA;AACA;AACA;;AAEE,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMmB,OAAO,GAAG,MAAM;AACpB;AAEA;AACA,UAAMC,KAAK,GAAGV,aAAa,KAAK,IAAlB,IAA0BA,aAAa,CAACU,KAAd,CAAoBT,MAApB,EAA4BA,MAAM,GAAGI,OAArC,CAAxC;AAEAG,IAAAA,YAAY,CAACG,IAAI,CAACC,IAAL,CAAUZ,aAAa,CAACa,MAAd,GAAuBR,OAAjC,CAAD,CAAZ;AACD,GAPD;;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACR,MAAD,CAFM,CAAT;AAIA,QAAMS,KAAK,GAAGV,aAAa,KAAK,IAAlB,IAA0BA,aAAa,CAACU,KAAd,CAAoBT,MAApB,EAA4BA,MAAM,GAAGI,OAArC,CAAxC;;AAEE,QAAMS,eAAe,GAAGC,CAAC,IAAG;AACxB,UAAMC,YAAY,GAAGD,CAAC,CAACE,QAAvB;AACAf,IAAAA,SAAS,CAACc,YAAY,GAAG,CAAhB,CAAT;AACH,GAHD;;AAKF,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,oFAAf;AAAA,gBAEQhB,aAAa,KAAK,IAAlB,GACIA,aAAa,CAACa,MAAd,GAAuB,CAAvB,GACIH,KAAK,CAACQ,GAAN,CAAU,CAACC,OAAD,EAAUC,KAAV,KAAmB;AACzB,4BAAO,QAAC,IAAD;AAAM,UAAA,OAAO,EAAED;AAAf,WAA6BC,KAA7B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,CADJ,GAII,SALR,GAME;AARV;AAAA;AAAA;AAAA;AAAA,YADA,eAaE,QAAC,aAAD;AACM,MAAA,aAAa,EAAE,MADrB;AAEM,MAAA,SAAS,EAAE,MAFjB;AAGM,MAAA,UAAU,EAAE,KAHlB;AAIM,MAAA,cAAc,EAAE,UAJtB;AAKM,MAAA,SAAS,EAAEb,SALjB;AAMM,MAAA,oBAAoB,EAAE,CAN5B;AAOM,MAAA,kBAAkB,EAAE,CAP1B;AAQM,MAAA,YAAY,EAAEO,eARpB;AASM,MAAA,kBAAkB,EAAE,qDAT1B;AAUM,MAAA,qBAAqB,EAAE,kBAV7B;AAWM,MAAA,eAAe,EAAE,QAXvB;AAYM,MAAA,aAAa,EAAE;AAZrB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAlED;;GAAMnB,Y;;KAAAA,Y;AAoEN,qBAAeJ,UAAU,CAACI,YAAD,CAAzB","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { withRouter } from 'react-router'\nimport ProductsContext from './context/products/ProductsContext';\nimport ReactPaginate from 'react-paginate'\nimport Item from \"./Item\";\n\nconst SearchedItem = (props) => {\n  const productsContext = useContext(ProductsContext);\n  const {searchProducts , getProducts, searchedItems} = productsContext;\n\n    /*useEffect(() => {\n        getProducts()\n        searchProducts(props.match.params.txt);\n        // eslint-disable-next-line\n    },[getProducts])*/\n    \n  const [offset, setOffset] = useState(0);\n  const [data, setData] = useState([]);\n  const [perPage, setPerPage] = useState(3)\n  const [pageCount, setPageCount] = useState(0)\n\n  const getData = () => {\n    //fetch data\n\n    //slice data\n    const slice = searchedItems !== null && searchedItems.slice(offset, offset + perPage)\n\n    setPageCount(Math.ceil(searchedItems.length / perPage))\n  }\n\n  useEffect(() => {\n    getData()\n  }, [offset])\n\n  const slice = searchedItems !== null && searchedItems.slice(offset, offset + perPage)\n\n    const handlePageClick = e =>{\n        const selectedPage = e.selected;\n        setOffset(selectedPage + 1)\n    }\n\n  return (\n    <div className=\"block\">\n    <div className=\"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-3 gap-5\">\n        {\n            searchedItems !== null ? (\n                searchedItems.length > 0 ? (\n                    slice.map((product, index)=> {\n                        return(<Item product={product} key={index}/>)\n                    }) \n                ) : \"No data\"\n            ):'loading...'\n        }\n        \n    </div>\n    { <ReactPaginate \n            previousLabel={\"Prev\"}\n            nextLabel={\"Next\"}\n            breakLabel={\"...\"}\n            breakClassName={\"break-me\"}\n            pageCount={pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={handlePageClick}\n            containerClassName={\"pagination w-full bg-purple-500 flex justify-center\"}\n            subContainerClassName={\"pages pagination\"}\n            activeClassName={\"active\"}\n            pageClassName={\"px-2\"}\n        /> }\n    </div>\n\n  );\n};\n\nexport default withRouter(SearchedItem);\n"]},"metadata":{},"sourceType":"module"}