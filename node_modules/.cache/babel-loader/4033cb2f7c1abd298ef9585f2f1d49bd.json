{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/components/profile/account/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = props => {\n  _s();\n\n  const authContext = useContext(AuthContext);\n  const {\n    user,\n    logedin,\n    updatePassword,\n    errors,\n    setError\n  } = authContext; // set state\n\n  const [credentials, setCredentials] = useState({\n    password: \"\",\n    newPassword: \"\",\n    confirmNewPassword: \"\"\n  });\n  useEffect(() => {\n    if (!logedin) {\n      props.history.push(\"/login\");\n    } // eslint-disable-next-line\n\n  }, [logedin]); //destructure state objects\n\n  const {\n    password,\n    newPassword,\n    confirmNewPassword\n  } = credentials; //on change of inputs\n\n  const onChange = e => {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n    setError(\"\");\n  }; // Change Password\n\n\n  const changePassword = e => {\n    e.preventDefault();\n\n    if (password === \"\" || newPassword === \"\" || confirmNewPassword === \"\") {\n      setError(\"Fill in all fields\");\n      return false;\n    } else {\n      //setLogin(credentials)\n      updatePassword(credentials).then(() => {\n        props.history.push(\"/account\");\n      }).catch(err => {\n        setError(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-1 block bg-gray-100 min-h-96 w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: changePassword,\n      className: \"block rounded-md mt-2 h-full px-4 pt-4 pb-8 w-full m-auto bg-gray-300 md:w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"w-full text-center mt-1 mb-2 font-bold text-2xl\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: onChange,\n        autoComplete: \"off\",\n        placeholder: \"Enter existing password\",\n        className: \"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"newPassword\",\n        value: newPassword,\n        onChange: onChange,\n        placeholder: \"Enter New Password\",\n        className: \"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmNewPassword\",\n        value: confirmNewPassword,\n        placeholder: \"confirm new password\",\n        onChange: onChange,\n        className: \"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), errors !== null ? errors.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-red-600 text-sm py-2 italic\",\n        children: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-right py-2 text-purple-700\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgotpassword\",\n          children: \"Forgot Password ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"py-1 mt-4 w-full rounded-full border-1 bg-purple-600 text-white font-bold text-xl md:w-48 m-auto text-center outline-none\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"HIs+eHwLcQDa/ntRWPy9zZWhTM8=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/profile/account/ResetPassword.js"],"names":["React","useContext","useState","useEffect","Link","AuthContext","ResetPassword","props","authContext","user","logedin","updatePassword","errors","setError","credentials","setCredentials","password","newPassword","confirmNewPassword","history","push","onChange","e","target","name","value","changePassword","preventDefault","then","catch","err","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,WAAW,GAAGP,UAAU,CAACI,WAAD,CAA9B;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA,MAAjC;AAAyCC,IAAAA;AAAzC,MAAsDL,WAA5D,CAF+B,CAG/B;;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC;AAC7Cc,IAAAA,QAAQ,EAAE,EADmC;AAE7CC,IAAAA,WAAW,EAAE,EAFgC;AAG7CC,IAAAA,kBAAkB,EAAE;AAHyB,GAAD,CAA9C;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,OAAL,EAAc;AACZH,MAAAA,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD,KAHa,CAKd;;AACD,GANQ,EAMN,CAACV,OAAD,CANM,CAAT,CAV+B,CAkB/B;;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,MAAgDJ,WAAtD,CAnB+B,CAoB/B;;AACA,QAAMO,QAAQ,GAAIC,CAAD,IAAO;AACtBP,IAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkB,OAACQ,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA5C,KAAD,CAAd;AACAZ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAHD,CArB+B,CA0B/B;;;AACA,QAAMa,cAAc,GAAIJ,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACK,cAAF;;AAEA,QAAIX,QAAQ,KAAK,EAAb,IAAmBC,WAAW,KAAK,EAAnC,IAAyCC,kBAAkB,KAAK,EAApE,EAAwE;AACtEL,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACA,aAAO,KAAP;AACD,KAHD,MAGO;AACL;AACAF,MAAAA,cAAc,CAACG,WAAD,CAAd,CAA4Bc,IAA5B,CAAiC,MAAK;AACpCrB,QAAAA,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACD,OAFD,EAEGS,KAFH,CAESC,GAAG,IAAG;AACbjB,QAAAA,QAAQ,CAACiB,GAAD,CAAR;AACD,OAJD;AAKD;AACF,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA,2BACE;AACE,MAAA,QAAQ,EAAEJ,cADZ;AAEE,MAAA,SAAS,EAAC,+EAFZ;AAAA,8BAIE;AAAI,QAAA,SAAS,EAAC,iDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEV,QAHT;AAIE,QAAA,QAAQ,EAAEK,QAJZ;AAKE,QAAA,YAAY,EAAC,KALf;AAME,QAAA,WAAW,EAAC,yBANd;AAOE,QAAA,SAAS,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,cAPF,eAgBE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,KAAK,EAAEJ,WAHT;AAIE,QAAA,QAAQ,EAAEI,QAJZ;AAKE,QAAA,WAAW,EAAC,oBALd;AAME,QAAA,SAAS,EAAC,0DANZ;AAOE,QAAA,YAAY,EAAC;AAPf;AAAA;AAAA;AAAA;AAAA,cAhBF,eAyBE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,oBAFP;AAGE,QAAA,KAAK,EAAEH,kBAHT;AAIE,QAAA,WAAW,EAAE,sBAJf;AAKE,QAAA,QAAQ,EAAEG,QALZ;AAME,QAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,cAzBF,EAiCGT,MAAM,KAAK,IAAX,GACGA,MAAM,CAACmB,MAAP,GAAgB,CAAhB,iBACE;AAAG,QAAA,SAAS,EAAC,8CAAb;AAAA,kBACGnB;AADH;AAAA;AAAA;AAAA;AAAA,cAFL,GAMG,EAvCN,eAwCE;AAAG,QAAA,SAAS,EAAC,iCAAb;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxCF,eA2CE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,2HAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwDD,CAnGD;;GAAMN,a;;KAAAA,a;AAqGN,eAAeA,aAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/Context\";\n\nconst ResetPassword = (props) => {\n  const authContext = useContext(AuthContext);\n  const { user, logedin, updatePassword, errors, setError } = authContext;\n  // set state\n  const [credentials, setCredentials] = useState({\n    password: \"\",\n    newPassword: \"\",\n    confirmNewPassword: \"\",\n  });\n\n  useEffect(() => {\n    if (!logedin) {\n      props.history.push(\"/login\");\n    }\n\n    // eslint-disable-next-line\n  }, [logedin]);\n\n  //destructure state objects\n  const { password, newPassword, confirmNewPassword } = credentials;\n  //on change of inputs\n  const onChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n    setError(\"\");\n  };\n\n  // Change Password\n  const changePassword = (e) => {\n    e.preventDefault();\n\n    if (password === \"\" || newPassword === \"\" || confirmNewPassword === \"\") {\n      setError(\"Fill in all fields\");\n      return false;\n    } else {\n      //setLogin(credentials)\n      updatePassword(credentials).then(() =>{\n        props.history.push(\"/account\")\n      }).catch(err =>{\n        setError(err);\n      });\n    }\n  };\n\n  return (\n    <div className=\"p-1 block bg-gray-100 min-h-96 w-full\">\n      <form\n        onSubmit={changePassword}\n        className=\"block rounded-md mt-2 h-full px-4 pt-4 pb-8 w-full m-auto bg-gray-300 md:w-96\"\n      >\n        <h2 className=\"w-full text-center mt-1 mb-2 font-bold text-2xl\">\n          Reset Password\n        </h2>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={onChange}\n          autoComplete=\"off\"\n          placeholder=\"Enter existing password\"\n          className=\"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\"\n        />\n        <input\n          type=\"password\"\n          name=\"newPassword\"\n          value={newPassword}\n          onChange={onChange}\n          placeholder=\"Enter New Password\"\n          className=\"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\"\n          autoComplete=\"off\"\n        />\n        <input\n          type=\"password\"\n          name=\"confirmNewPassword\"\n          value={confirmNewPassword}\n          placeholder={\"confirm new password\"}\n          onChange={onChange}\n          className=\"pl-2 py-2 mt-2 w-full rounded-full border-1 outline-none\"\n        />\n        {errors !== null\n          ? errors.length > 0 && (\n              <p className=\"text-center text-red-600 text-sm py-2 italic\">\n                {errors}\n              </p>\n            )\n          : \"\"}\n        <p className=\"text-right py-2 text-purple-700\">\n          <Link to=\"/forgotpassword\">Forgot Password ?</Link>\n        </p>\n        <button\n          type=\"submit\"\n          className=\"py-1\n           mt-4 w-full rounded-full border-1 bg-purple-600\n           text-white font-bold text-xl md:w-48 m-auto text-center outline-none\"\n        >\n          Update\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}