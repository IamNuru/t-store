{"ast":null,"code":"import { REGISTER, LOGIN, LOGOUT, UPDATE_PASSWORD, ADD_TO_ORDERS, ERRORS, CLEAR_ERRORS } from \"../types\";\n\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case REGISTER:\n      return { ...state,\n        user: action.payload,\n        logedin: true,\n        errors: null\n      };\n\n    case LOGIN:\n      return { ...state,\n        user: action.payload,\n        logedin: action.payload,\n        errors: null\n      };\n\n    case LOGOUT:\n      return { ...state,\n        logedin: false,\n        user: null,\n        errors: null\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        errors: null\n      };\n\n    case UPDATE_PASSWORD:\n      return { ...state,\n        user: { ...state.user,\n          password: action.payload.newPassword\n        },\n\n        /* user: {...state, user: {...state.user, password:action.payload.newPassword}}, */\n        users: [...state.users.map(u => u.username === state.user.username ? { ...u,\n          password: action.payload.newPassword\n        } : u)]\n      };\n\n    case ERRORS:\n      return { ...state,\n        errors: action.payload\n      };\n\n    case ADD_TO_ORDERS:\n      return { ...state,\n        orders: [...state.orders, action.payload]\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/context/auth/Reducer.js"],"names":["REGISTER","LOGIN","LOGOUT","UPDATE_PASSWORD","ADD_TO_ORDERS","ERRORS","CLEAR_ERRORS","AuthReducer","state","action","type","user","payload","logedin","errors","password","newPassword","users","map","u","username","orders"],"mappings":"AAAA,SACEA,QADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,eAJF,EAKEC,aALF,EAMEC,MANF,EAOEC,YAPF,QAQO,UARP;;AAUA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,QAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,IAAI,EAAEF,MAAM,CAACG,OAFR;AAGLC,QAAAA,OAAO,EAAE,IAHJ;AAILC,QAAAA,MAAM,EAAE;AAJH,OAAP;;AAOF,SAAKb,KAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,IAAI,EAAEF,MAAM,CAACG,OAFR;AAGLC,QAAAA,OAAO,EAAEJ,MAAM,CAACG,OAHX;AAILE,QAAAA,MAAM,EAAE;AAJH,OAAP;;AAOF,SAAKZ,MAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELK,QAAAA,OAAO,EAAE,KAFJ;AAGLF,QAAAA,IAAI,EAAE,IAHD;AAILG,QAAAA,MAAM,EAAE;AAJH,OAAP;;AAOF,SAAKR,YAAL;AACE,aAAO;AACLQ,QAAAA,MAAM,EAAE;AADH,OAAP;;AAIF,SAAKX,eAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELG,QAAAA,IAAI,EAAE,EAAC,GAAGH,KAAK,CAACG,IAAV;AAAgBI,UAAAA,QAAQ,EAACN,MAAM,CAACG,OAAP,CAAeI;AAAxC,SAFD;;AAGL;AACAC,QAAAA,KAAK,EAAE,CAAC,GAAGT,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAiBC,CAAD,IAC3BA,CAAC,CAACC,QAAF,KAAeZ,KAAK,CAACG,IAAN,CAAWS,QAA1B,GAAqC,EAAC,GAAGD,CAAJ;AAAOJ,UAAAA,QAAQ,EAACN,MAAM,CAACG,OAAP,CAAeI;AAA/B,SAArC,GAAmFG,CADxE,CAAJ;AAJF,OAAP;;AASF,SAAKd,MAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELM,QAAAA,MAAM,EAAEL,MAAM,CAACG;AAFV,OAAP;;AAKF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELa,QAAAA,MAAM,EAAE,CAAC,GAAGb,KAAK,CAACa,MAAV,EAAkBZ,MAAM,CAACG,OAAzB;AAFH,OAAP;;AAKF;AACE,aAAO,EACL,GAAGJ;AADE,OAAP;AArDJ;AAyDD,CA1DD;;KAAMD,W;AA4DN,eAAeA,WAAf","sourcesContent":["import {\n  REGISTER,\n  LOGIN,\n  LOGOUT,\n  UPDATE_PASSWORD,\n  ADD_TO_ORDERS,\n  ERRORS,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case REGISTER:\n      return {\n        ...state,\n        user: action.payload,\n        logedin: true,\n        errors: null\n      };\n\n    case LOGIN:\n      return {\n        ...state,\n        user: action.payload,\n        logedin: action.payload,\n        errors: null\n      };\n\n    case LOGOUT:\n      return {\n        ...state,\n        logedin: false,\n        user: null,\n        errors: null\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        errors: null\n      };\n\n    case UPDATE_PASSWORD:\n      return {\n        ...state,\n        user: {...state.user, password:action.payload.newPassword},\n        /* user: {...state, user: {...state.user, password:action.payload.newPassword}}, */\n        users: [...state.users.map((u) => \n        u.username === state.user.username ? {...u, password:action.payload.newPassword} : u)]\n      };\n      \n\n    case ERRORS:\n      return {\n        ...state,\n        errors: action.payload\n      };\n\n    case ADD_TO_ORDERS:\n      return {\n        ...state,\n        orders: [...state.orders, action.payload]\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default AuthReducer;\n"]},"metadata":{},"sourceType":"module"}