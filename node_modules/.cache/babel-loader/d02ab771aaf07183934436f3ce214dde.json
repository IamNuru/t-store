{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/components/context/auth/State.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useEffect } from \"react\";\nimport AuthReducer from \"./Reducer\";\nimport AuthContext from \"./Context\";\nimport { REGISTER, LOGIN, LOGOUT } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    user: {\n      username: 'admin',\n      password: 'password',\n      name: 'Administrator'\n    },\n    logedin: false\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); // set local storage to logged in user\n\n  /*if (window.localStorage.getItem('user')){\n    initialState.login = true \n  }*/\n\n  useEffect(() => {\n    console.log('hellow');\n  }, []); //actions\n  //Register user\n\n  const register = user => {\n    dispatch({\n      type: (REGISTER, LOGIN),\n      payload: user\n    });\n  }; //log user in\n\n\n  const login = () => {\n    dispatch({\n      type: LOGIN\n    });\n  }; //log user out\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      logedin: state.logedin,\n      login,\n      register,\n      logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/context/auth/State.js"],"names":["useReducer","useEffect","AuthReducer","AuthContext","REGISTER","LOGIN","LOGOUT","AuthState","props","initialState","user","username","password","name","logedin","state","dispatch","console","log","register","type","payload","login","logout","children"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AAEA,SACEC,QADF,EAEEC,KAFF,EAGEC,MAHF,QAIO,UAJP;;;AAMA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EACF;AACEC,MAAAA,QAAQ,EAAE,OADZ;AAEEC,MAAAA,QAAQ,EAAE,UAFZ;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAFiB;AAOnBC,IAAAA,OAAO,EAAE;AAPU,GAArB;AAUA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACE,WAAD,EAAcO,YAAd,CAApC,CAX2B,CAa3B;;AACA;AACF;AACA;;AAEER,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAED,GAHQ,EAGN,EAHM,CAAT,CAlB2B,CAuB3B;AACA;;AACA,QAAMC,QAAQ,GAAIT,IAAD,IAAU;AACzBM,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,GAAGhB,QAAQ,EAAEC,KAAb,CADG;AAEPgB,MAAAA,OAAO,EAAEX;AAFF,KAAD,CAAR;AAKD,GAND,CAzB2B,CAiC3B;;;AACA,QAAMY,KAAK,GAAG,MAAM;AAClBN,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEf;AADC,KAAD,CAAR;AAGD,GAJD,CAlC2B,CA0C3B;;;AACA,QAAMkB,MAAM,GAAG,MAAM;AACnBP,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,IAAI,EAAEK,KAAK,CAACL,IADP;AAELI,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFV;AAGLQ,MAAAA,KAHK;AAILH,MAAAA,QAJK;AAKLI,MAAAA;AALK,KADT;AAAA,cASGf,KAAK,CAACgB;AATT;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9DD;;GAAMjB,S;;KAAAA,S;AAgEN,eAAeA,SAAf","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport AuthReducer from \"./Reducer\";\nimport AuthContext from \"./Context\";\n\nimport {\n  REGISTER,\n  LOGIN,\n  LOGOUT,\n} from \"../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    user:\n      {\n        username: 'admin',\n        password: 'password',\n        name: 'Administrator'\n      },\n    logedin: false,\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  // set local storage to logged in user\n  /*if (window.localStorage.getItem('user')){\n    initialState.login = true \n  }*/\n\n  useEffect(() => {\n    console.log('hellow')\n    \n  }, [])\n  \n  //actions\n  //Register user\n  const register = (user) => {\n    dispatch({\n      type: (REGISTER, LOGIN),\n      payload: user,\n    });\n    \n  };\n\n  //log user in\n  const login = () => {\n    dispatch({\n      type: LOGIN,\n    });\n  };\n\n  \n\n  //log user out\n  const logout = () => {\n    dispatch({\n      type: LOGOUT,\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        logedin: state.logedin,\n        login,\n        register,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}