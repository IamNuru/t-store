{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/components/context/auth/State.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport { useReducer } from \"react\";\nimport AuthReducer from \"./Reducer\";\nimport AuthContext from \"./Context\";\nimport axios from \"axios\"; //import variables from types\n\nimport { REGISTER, LOGIN, LOGOUT, UPDATE_PASSWORD, ADD_TO_ORDERS, ERRORS, GET_ORDERS, GET_USER } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: null,\n    orders: [],\n    errors: null,\n    logedin: false\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //set configuration for making request\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  }; //get token from localstorage if found\n\n  if (localStorage.getItem(\"token\")) {\n    initialState.logedin = localStorage.getItem(\"token\");\n  } else {\n    initialState.logedin = false;\n  } //get authenticated user object\n\n\n  useEffect(() => {\n    const getAuthUser = async () => {\n      const configs = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      };\n      await axios.get(\"http://localhost:8000/api/user\", configs).then(res => {\n        dispatch({\n          type: GET_USER,\n          payload: res.data\n        });\n      }).catch(err => {});\n    };\n\n    getAuthUser(); // eslint-disable-next-line\n  }, [initialState.user, configs]);\n  /** *** ACTIONS *** */\n  //Register new user\n\n  const register = async user => {\n    await axios.post(\"http://localhost:8000/api/register\", user, config).then(res => {\n      dispatch({\n        type: REGISTER,\n        payload: res.data[0]\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //log user in\n\n\n  const login = async user => {\n    await axios.post(\"http://localhost:8000/api/login\", user, config).then(res => {\n      dispatch({\n        type: LOGIN,\n        payload: res.data[0]\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : \"\";\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //Clear all errors on the page such as form errors\n\n\n  const setError = err => {\n    dispatch({\n      type: ERRORS,\n      payload: err\n    });\n  }; //log user out\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; //update logged in user password\n\n\n  const updatePassword = credentials => {\n    dispatch({\n      type: UPDATE_PASSWORD,\n      payload: credentials\n    });\n  }; //add to order\n\n\n  const addToOrders = product => {\n    dispatch({\n      type: ADD_TO_ORDERS,\n      payload: product\n    });\n  }; //get authenticated user orders\n\n\n  const getOrders = async () => {\n    axios.get(\"http://localhost:8000/api/orders\", config).then(res => {\n      dispatch({\n        type: GET_ORDERS,\n        payload: res.data[0].transactions\n      });\n    }).catch(err => {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      users: state.users,\n      logedin: state.logedin,\n      orders: state.orders,\n      errors: state.errors,\n      login,\n      register,\n      logout,\n      updatePassword,\n      addToOrders,\n      setError,\n      getOrders\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/context/auth/State.js"],"names":["React","useEffect","useCallback","useReducer","AuthReducer","AuthContext","axios","REGISTER","LOGIN","LOGOUT","UPDATE_PASSWORD","ADD_TO_ORDERS","ERRORS","GET_ORDERS","GET_USER","AuthState","props","initialState","users","user","orders","errors","logedin","state","dispatch","config","headers","Authorization","localStorage","getItem","getAuthUser","configs","get","then","res","type","payload","data","catch","err","register","post","obj","response","Object","keys","login","setError","logout","updatePassword","credentials","addToOrders","product","getOrders","transactions","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { useReducer } from \"react\";\nimport AuthReducer from \"./Reducer\";\nimport AuthContext from \"./Context\";\nimport axios from \"axios\";\n\n//import variables from types\nimport {\n  REGISTER,\n  LOGIN,\n  LOGOUT,\n  UPDATE_PASSWORD,\n  ADD_TO_ORDERS,\n  ERRORS,\n  GET_ORDERS,\n  GET_USER,\n} from \"../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    users: [],\n    user: null,\n    orders: [],\n    errors: null,\n    logedin: false,\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //set configuration for making request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n  };\n\n  //get token from localstorage if found\n  if (localStorage.getItem(\"token\")) {\n    initialState.logedin = localStorage.getItem(\"token\");\n  } else {\n    initialState.logedin = false;\n  }\n\n  //get authenticated user object\n  useEffect(() => {\n    \n    const getAuthUser = async () => {\n      const configs = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    };\n      await axios\n        .get(\"http://localhost:8000/api/user\", configs)\n        .then((res) => {\n          dispatch({\n            type: GET_USER,\n            payload: res.data,\n          });\n        })\n        .catch((err) => {});\n    };\n    getAuthUser();\n    // eslint-disable-next-line\n  }, [initialState.user, configs]);\n\n  /** *** ACTIONS *** */\n  //Register new user\n  const register = async (user) => {\n    await axios\n      .post(\"http://localhost:8000/api/register\", user, config)\n      .then((res) => {\n        dispatch({\n          type: REGISTER,\n          payload: res.data[0],\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : \"\";\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]],\n        });\n      });\n  };\n\n  //log user in\n  const login = async (user) => {\n    await axios\n      .post(\"http://localhost:8000/api/login\", user, config)\n      .then((res) => {\n        dispatch({\n          type: LOGIN,\n          payload: res.data[0],\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : \"\";\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]],\n        });\n      });\n  };\n\n  //Clear all errors on the page such as form errors\n  const setError = (err) => {\n    dispatch({\n      type: ERRORS,\n      payload: err,\n    });\n  };\n\n  //log user out\n  const logout = () => {\n    dispatch({\n      type: LOGOUT,\n    });\n  };\n\n  //update logged in user password\n  const updatePassword = (credentials) => {\n    dispatch({\n      type: UPDATE_PASSWORD,\n      payload: credentials,\n    });\n  };\n\n  //add to order\n  const addToOrders = (product) => {\n    dispatch({\n      type: ADD_TO_ORDERS,\n      payload: product,\n    });\n  };\n\n  //get authenticated user orders\n  const getOrders = async () => {\n    axios\n      .get(\"http://localhost:8000/api/orders\", config)\n      .then((res) => {\n        dispatch({\n          type: GET_ORDERS,\n          payload: res.data[0].transactions,\n        });\n      })\n      .catch((err) => {});\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        users: state.users,\n        logedin: state.logedin,\n        orders: state.orders,\n        errors: state.errors,\n        login,\n        register,\n        logout,\n        updatePassword,\n        addToOrders,\n        setError,\n        getOrders,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}