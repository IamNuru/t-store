{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART, INCREASE_CART_ITEM_QTY, DECREASE_CART_ITEM_QTY, CLEAR_CART } from \"../types\";\n\nconst CartReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return { ...state,\n        cart: [...state.cart, action.payload]\n      };\n\n    case REMOVE_FROM_CART:\n      if (localStorage.getItem(\"cart\")) {\n        let scart = JSON.parse(localStorage.getItem(\"cart\"));\n        let filteredScart = scart.filter(item => item.id !== action.payload.id);\n        localStorage.setItem(\"cart\", JSON.stringify(filteredScart));\n      }\n\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload)\n      };\n\n    case INCREASE_CART_ITEM_QTY:\n      if (localStorage.getItem(\"cart\")) {\n        let scart = JSON.parse(localStorage.getItem(\"cart\"));\n        let fileredScart = scart.map(item => item.id === action.payload ? { ...item,\n          qty: item.qty + 1\n        } : item);\n        localStorage.setItem(\"cart\", JSON.stringify(fileredScart));\n      }\n\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload ? { ...item,\n          qty: item.qty + 1\n        } : item)\n      };\n\n    case DECREASE_CART_ITEM_QTY:\n      if (localStorage.getItem(\"cart\")) {\n        let scart = JSON.parse(localStorage.getItem(\"cart\"));\n        scart.map(item => item.id === action.payload ? { ...item,\n          qty: item.qty - 1\n        } : item);\n        localStorage.setItem(\"cart\", JSON.stringify(fileredScart));\n      }\n\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload ? { ...item,\n          qty: item.qty - 1\n        } : item)\n      };\n\n    case CLEAR_CART:\n      if (localStorage.getItem(\"cart\")) {\n        localStorage.removeItem('cart');\n      }\n\n      return { ...state,\n        cart: null\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/context/cart/CartReducer.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","INCREASE_CART_ITEM_QTY","DECREASE_CART_ITEM_QTY","CLEAR_CART","CartReducer","state","action","type","cart","payload","localStorage","getItem","scart","JSON","parse","filteredScart","filter","item","id","setItem","stringify","fileredScart","map","qty","removeItem"],"mappings":"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","sourcesContent":["import {\n  ADD_TO_CART,\n  REMOVE_FROM_CART,\n  INCREASE_CART_ITEM_QTY,\n  DECREASE_CART_ITEM_QTY,\n  CLEAR_CART,\n} from \"../types\";\n\nconst CartReducer = (state, action) => {\n  switch (action.type) {  \n    case ADD_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, action.payload],\n      };\n\n\n    case REMOVE_FROM_CART:\n      if (localStorage.getItem(\"cart\")) {\n        let scart = JSON.parse(localStorage.getItem(\"cart\"));\n        let filteredScart = scart.filter(\n          (item) => item.id !== action.payload.id\n        );\n        localStorage.setItem(\"cart\", JSON.stringify(filteredScart));\n      }\n      return {\n        ...state,\n        cart: state.cart.filter((item) => item.id !== action.payload),\n      };\n\n\n    case INCREASE_CART_ITEM_QTY:\n      if (localStorage.getItem(\"cart\")) {\n        let scart = JSON.parse(localStorage.getItem(\"cart\"));\n        let fileredScart = scart.map(item => item.id === action.payload ? { ...item, qty: item.qty + 1 } : item)\n        localStorage.setItem(\"cart\", JSON.stringify(fileredScart));\n      }\n      \n      return {\n        ...state,\n        cart: state.cart.map((item) =>\n          item.id === action.payload ? { ...item, qty: item.qty + 1 } : item\n        ),\n      };\n\n\n    case DECREASE_CART_ITEM_QTY:\n      if (localStorage.getItem(\"cart\")) {\n        let scart = JSON.parse(localStorage.getItem(\"cart\"));\n        scart.map(item => item.id === action.payload ? { ...item, qty: item.qty - 1 } : item)\n        localStorage.setItem(\"cart\", JSON.stringify(fileredScart));\n      }\n      return {\n        ...state,\n        cart: state.cart.map((item) =>\n          item.id === action.payload ? { ...item, qty: item.qty - 1 } : item\n        ),\n      };\n    case CLEAR_CART:\n      if (localStorage.getItem(\"cart\")) {\n        localStorage.removeItem('cart')\n      }\n      return {\n        ...state,\n        cart: null,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default CartReducer;\n"]},"metadata":{},"sourceType":"module"}