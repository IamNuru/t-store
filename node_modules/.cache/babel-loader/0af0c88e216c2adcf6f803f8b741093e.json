{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/t-store/src/components/context/auth/State.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport AuthReducer from \"./Reducer\";\nimport AuthContext from \"./Context\";\nimport axios from \"axios\";\nimport { REGISTER, LOGIN, LOGOUT, UPDATE_PASSWORD, ADD_TO_ORDERS, ERRORS } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: null,\n    orders: [],\n    errors: null,\n    logedin: false\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  if (localStorage.getItem('token')) {\n    initialState.logedin = localStorage.getItem('token');\n  } else {\n    initialState.logedin = false;\n  } // set local storage to logged in user\n\n  /*if (window.localStorage.getItem('user')){\n    initialState.login = true \n  }*/\n\n\n  const configu = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  axios.post(\"http://localhost:8000/api/orders\").then(res => {\n    console.log(res);\n  }).catch(err => {\n    console.log(err.response);\n  }); //actions\n  //Register user\n\n  const register = async user => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await axios.post(\"http://localhost:8000/api/register\", user, config).then(res => {\n      dispatch({\n        type: REGISTER,\n        payload: res.data[0]\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : '';\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //log user in\n\n\n  const login = async user => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await axios.post(\"http://localhost:8000/api/login\", user, config).then(res => {\n      dispatch({\n        type: LOGIN,\n        payload: res.data[0]\n      });\n    }).catch(err => {\n      var obj = err.response.data.errors ? err.response.data.errors : '';\n      dispatch({\n        type: ERRORS,\n        payload: obj[Object.keys(obj)[0]]\n      });\n    });\n  }; //log user out\n\n\n  const setError = err => {\n    dispatch({\n      type: ERRORS,\n      payload: err\n    });\n  }; //log user out\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; //log user out\n\n\n  const updatePassword = credentials => {\n    dispatch({\n      type: UPDATE_PASSWORD,\n      payload: credentials\n    });\n  }; //add to order\n\n\n  const addToOrders = product => {\n    dispatch({\n      type: ADD_TO_ORDERS,\n      payload: product\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      users: state.users,\n      logedin: state.logedin,\n      orders: state.orders,\n      errors: state.errors,\n      login,\n      register,\n      logout,\n      updatePassword,\n      addToOrders,\n      setError\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/generous/projects/t-store/src/components/context/auth/State.js"],"names":["useReducer","AuthReducer","AuthContext","axios","REGISTER","LOGIN","LOGOUT","UPDATE_PASSWORD","ADD_TO_ORDERS","ERRORS","AuthState","props","initialState","users","user","orders","errors","logedin","state","dispatch","localStorage","getItem","configu","headers","post","then","res","console","log","catch","err","response","register","config","type","payload","data","obj","Object","keys","login","setError","logout","updatePassword","credentials","addToOrders","product","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport AuthReducer from \"./Reducer\";\nimport AuthContext from \"./Context\";\nimport axios from \"axios\";\n\nimport {\n  REGISTER,\n  LOGIN,\n  LOGOUT,\n  UPDATE_PASSWORD,\n  ADD_TO_ORDERS,\n  ERRORS,\n} from \"../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    users: [],\n    user: null,\n    orders: [],\n    errors: null,\n    logedin: false,\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  if (localStorage.getItem('token')) {\n    initialState.logedin = localStorage.getItem('token')\n  } else {\n    initialState.logedin = false\n  }\n  // set local storage to logged in user\n  /*if (window.localStorage.getItem('user')){\n    initialState.login = true \n  }*/\n  const configu = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }\naxios\n.post(\"http://localhost:8000/api/orders\")\n.then((res) => {\n  console.log(res)\n}).catch(err =>{\n  console.log(err.response);\n})\n  //actions\n  //Register user\n  const register = async (user) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    await axios\n      .post(\"http://localhost:8000/api/register\", user, config)\n      .then((res) => {\n        dispatch({\n          type: REGISTER,\n          payload: res.data[0],\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : ''\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]]\n        });\n      });\n  };\n\n  //log user in\n  const login = async (user) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    await axios\n      .post(\"http://localhost:8000/api/login\", user, config)\n      .then((res) => {\n        dispatch({\n          type: LOGIN,\n          payload: res.data[0],\n        });\n      })\n      .catch((err) => {\n        var obj = err.response.data.errors ? err.response.data.errors : ''\n        dispatch({\n          type: ERRORS,\n          payload: obj[Object.keys(obj)[0]]\n        });\n      });\n  };\n\n  //log user out\n  const setError = (err) => {\n    dispatch({\n      type: ERRORS,\n      payload:err\n    });\n  };\n\n  //log user out\n  const logout = () => {\n    dispatch({\n      type: LOGOUT,\n    });\n  };\n\n  //log user out\n  const updatePassword = (credentials) => {\n    dispatch({\n      type: UPDATE_PASSWORD,\n      payload: credentials,\n    });\n  };\n  //add to order\n  const addToOrders = (product) => {\n    dispatch({\n      type: ADD_TO_ORDERS,\n      payload: product,\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        users: state.users,\n        logedin: state.logedin,\n        orders: state.orders,\n        errors: state.errors,\n        login,\n        register,\n        logout,\n        updatePassword,\n        addToOrders,\n        setError,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}